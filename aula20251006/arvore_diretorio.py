import os

class No:
    def __init__(self, nome, tipo):
        """Cria um n√≥ representando um arquivo ou diret√≥rio."""
        self.nome = nome          # nome do arquivo ou pasta
        self.tipo = tipo          # 'pasta' ou 'arquivo'
        self.filhos = []          # lista de n√≥s filhos

    def adicionar_filho(self, filho):
        """Adiciona um n√≥ filho ‚Äî somente se este n√≥ for uma pasta."""
        if self.tipo == "pasta":
            self.filhos.append(filho)

    def imprimir(self, nivel=0):
        """Imprime o conte√∫do da √°rvore com indenta√ß√£o."""
        prefixo = "  " * nivel + ("üìÅ " if self.tipo == "pasta" else "üìÑ ")
        print(prefixo + self.nome)
        for filho in self.filhos:
            filho.imprimir(nivel + 1)


class Arvore:
    def __init__(self, raiz):
        """Inicializa a √°rvore com o n√≥ raiz."""
        self.raiz = raiz

    @staticmethod
    def ler_diretorio(caminho):
        """L√™ o diret√≥rio e constr√≥i a √°rvore recursivamente."""
        nome = os.path.basename(caminho) or caminho
        no_raiz = No(nome, "pasta")

        try:
            for item in os.listdir(caminho):
                caminho_completo = os.path.join(caminho, item)
                if os.path.isdir(caminho_completo):
                    # cria sub√°rvore para pastas
                    filho = Arvore.ler_diretorio(caminho_completo)
                    no_raiz.adicionar_filho(filho.raiz)
                else:
                    # adiciona arquivos diretamente
                    no_raiz.adicionar_filho(No(item, "arquivo"))
        except PermissionError:
            # ignora pastas sem permiss√£o
            pass

        return Arvore(no_raiz)

    def imprimir(self):
        """Imprime toda a √°rvore."""
        self.raiz.imprimir()


if __name__ == "__main__":
    # Obt√©m o diret√≥rio atual
    diretorio_os = os.getcwd()
    print(f"Diret√≥rio atual: {diretorio_os}\n")

    # L√™ o diret√≥rio e monta a √°rvore
    arvore = Arvore.ler_diretorio(diretorio_os)

    # Imprime a estrutura hier√°rquica
    print("Estrutura de diret√≥rios:\n")
    arvore.imprimir()
